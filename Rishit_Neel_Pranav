# Load Library
library(ggplot2)
library(dplyr)
library(statsr)
library(gridExtra)
library(corrplot)
library(xlsx)
 # Load data
train=read.csv(file.choose(), header = TRUE)
test=read.csv(file.choose(), header = TRUE)
#Exploratory data analysis and feature selection
str(train)
str(test)
#Summary statistics
summary(train)
summary(test)
train = na.omit(train)
test = na.omit(test)
set.seed(2017)
dim(train)
dim(test)
# Correlation between numerical variables
vars <- names(train) %in% c('SalePrice', 'LotArea', 'PoolArea', 'GarageArea','GrLivArea')
selected_train <- train[vars]
corr.matrix <- cor(selected_train)
corrplot(corr.matrix, main="\n\nCorrelation Plot of numerical variables", method="number")
# Correlation between categorical variables and audience score
boxplot(SalePrice~Street, data=train, main='', xlab='Street', ylab='Sales Price')
by(train$SalePrice, train$Street, summary)
boxplot(SalePrice~LotFrontage, data=train, main='', xlab='LOT FRONTAGE', ylab='Sales Price')
by(train$SalePrice, train$LotFrontage, summary)
boxplot(SalePrice~OverallCond, data=train, main='', xlab='OCERALL COND', ylab='Sales Price')
by(train$SalePrice, train$OverallCond, summary)
boxplot(SalePrice~MSZoning, data=train, main='', xlab='MSZONING', ylab='Sales Price')
by(train$SalePrice, train$MSZoning, summary)
boxplot(SalePrice~MSSubClass, data=train, main='', xlab='MS SUB CLASS', ylab='Sales Price')
by(train$SalePrice, train$MSSubClass, summary)
boxplot(SalePrice~LotShape, data=train, main='', xlab='LOT SHAPE', ylab='Sales Price')
by(train$SalePrice, train$LotShape, summary)
boxplot(SalePrice~LandContour, data=train, main='', xlab='LAND CONTOUR', ylab='Sales Price')
by(train$SalePrice, train$LandContour, summary)
boxplot(SalePrice~LotConfig, data=train, main='', xlab='LOT CONFIG', ylab='Sales Price')
by(train$SalePrice, train$LotConfig, summary)
boxplot(SalePrice~Neighborhood, data=train, main='', xlab='NEIGHBOURHOOD', ylab='Sales Price')
by(train$SalePrice, train$Neighborhood, summary)
boxplot(SalePrice~Condition1, data=train, main='', xlab='CONDITION 1', ylab='Sales Price')
by(train$SalePrice, train$Condition1, summary)
boxplot(SalePrice~Condition2, data=train, main='', xlab='CONDITION2', ylab='Sales Price')
by(train$SalePrice, train$Condition2, summary)
boxplot(SalePrice~BldgType, data=train, main='', xlab='BUILDING TYPE', ylab='Sales Price')
by(train$SalePrice, train$BldgType, summary)
boxplot(SalePrice~HouseStyle, data=train, main='', xlab='HOUSE STYLE', ylab='Sales Price')
by(train$SalePrice, train$HouseStyle, summary)
boxplot(SalePrice~OverallQual, data=train, main='', xlab='OVERALL QUALITY', ylab='Sales Price')
by(train$SalePrice, train$OverallQual, summary)
boxplot(SalePrice~RoofStyle, data=train, main='', xlab='ROOF STYLE', ylab='Sales Price')
by(train$SalePrice, train$RoofStyle, summary)
boxplot(SalePrice~RoofMatl, data=train, main='', xlab='ROOF MATRIAL', ylab='Sales Price')
by(train$SalePrice, train$RoofMatl, summary)
boxplot(SalePrice~Exterior1st, data=train, main='', xlab='EXTERIOR 1', ylab='Sales Price')
by(train$SalePrice, train$Exterior1st, summary)
boxplot(SalePrice~Exterior2nd, data=train, main='', xlab='EXTERIOR 2', ylab='Sales Price')
by(train$SalePrice, train$Exterior2nd, summary)
boxplot(SalePrice~MasVnrType, data=train, main='', xlab='MASVNRTYPE', ylab='Sales Price')
by(train$SalePrice, train$MasVnrType, summary)
boxplot(SalePrice~MasVnrArea, data=train, main='', xlab='MASVNRAREA', ylab='Sales Price')
by(train$SalePrice, train$MasVnrArea, summary)
boxplot(SalePrice~ExterQual, data=train, main='', xlab='EXTERQUAL', ylab='Sales Price')
by(train$SalePrice, train$ExterQual, summary)
boxplot(SalePrice~Foundation, data=train, main='', xlab='FOUNDATION', ylab='Sales Price')
by(train$SalePrice, train$Foundation, summary)
boxplot(SalePrice~TotalBsmtSF, data=train, main='', xlab='TOTAL', ylab='Sales Price')
by(train$SalePrice, train$TotalBsmtSF, summary)
boxplot(SalePrice~HeatingQC, data=train, main='', xlab='HEATING QC', ylab='Sales Price')
by(train$SalePrice, train$HeatingQC, summary)
boxplot(SalePrice~CentralAir, data=train, main='', xlab='CENTRAL AIR', ylab='Sales Price')
by(train$SalePrice, train$CentralAir, summary)
boxplot(SalePrice~Electrical, data=train, main='', xlab='ELECTRICAL', ylab='Sales Price')
by(train$SalePrice, train$Electrical, summary)
boxplot(SalePrice~LowQualFinSF, data=train, main='', xlab='LOW QUALITY', ylab='Sales Price')
by(train$SalePrice, train$LowQualFinSF, summary)
boxplot(SalePrice~GrLivArea, data=train, main='', xlab='GR LIV AREA', ylab='Sales Price')
by(train$SalePrice, train$GrLivArea, summary)
boxplot(SalePrice~LowQualFinSF, data=train, main='', xlab='Genre', ylab='Sales Price')
by(train$SalePrice, train$LowQualFinSF, summary)
boxplot(SalePrice~BedroomAbvGr, data=train, main='', xlab='BED ROOM ABOVE', ylab='Sales Price')
by(train$SalePrice, train$BedroomAbvGr, summary)
boxplot(SalePrice~KitchenAbvGr, data=train, main='', xlab='KITCHEN ABOVE', ylab='Sales Price')
by(train$SalePrice, train$KitchenAbvGr, summary)
boxplot(SalePrice~TotRmsAbvGrd, data=train, main='', xlab='TOTAL ROOMS', ylab='Sales Price')
by(train$SalePrice, train$TotRmsAbvGrd, summary)
boxplot(SalePrice~Functional, data=train, main='', xlab='FUNCTIONAL', ylab='Sales Price')
by(train$SalePrice, train$Functional, summary)
boxplot(SalePrice~GarageArea, data=train, main='', xlab='GARAGE AREA', ylab='Sales Price')
by(train$SalePrice, train$GarageArea, summary)
boxplot(SalePrice~PoolArea, data=train, main='', xlab='POOL AREA', ylab='Sales Price')
by(train$SalePrice, train$PoolArea, summary)
boxplot(SalePrice~SaleType, data=train, main='', xlab='SALE TYPE', ylab='Sales Price')
by(train$SalePrice, train$SaleType, summary)
boxplot(SalePrice~SaleCondition, data=train, main='', xlab='SALE CONDITION', ylab='Sales Price')
by(train$SalePrice, train$SaleCondition, summary)
#Modeling
full_model <- lm(SalePrice~LotArea+Street+LotFrontage+MSZoning+MSSubClass+LotShape+LandContour+LotConfig+Neighborhood+Condition1+Condition2+BldgType+HouseStyle+OverallQual+OverallCond+RoofStyle+RoofMatl+Exterior1st+Exterior2nd+MasVnrType+MasVnrArea+ExterQual+Foundation+TotalBsmtSF+HeatingQC+CentralAir+Electrical+LowQualFinSF+GrLivArea+BedroomAbvGr+KitchenAbvGr+TotRmsAbvGrd+Functional+GarageArea+PoolArea+SaleType+SaleCondition, data = train)
summary(full_model)
fit1 <- lm(SalePrice~LotArea+LandContour+LotConfig+Neighborhood+Condition1+Condition2+HouseStyle+OverallQual+OverallCond+RoofMatl+MasVnrArea+ExterQual+ExterCond+Foundation+TotalBsmtSF+LowQualFinSF+GrLivArea+BedroomAbvGr+KitchenAbvGr+GarageArea+PoolArea, data = train)
summary(fit1)
#Model diagnostics
ggplot(data = fit1, aes(x = .fitted, y = .resid)) + geom_point() + geom_hline(yintercept = 0, linetype = "dashed") + xlab("Fitted values") + ylab("Residuals")
ggplot(data = fit1, aes(x = .resid)) + geom_histogram(binwidth = 1, fill='white', color='black') + xlab("Residuals")
ggplot(data = fit1, aes(sample = .resid)) + stat_qq()
#Prediction
options(max.print=1000*3)
new <- test %>% select(LotArea, LandContour, LotConfig, Neighborhood, Condition1, Condition2, HouseStyle, OverallQual, OverallCond, RoofMatl, MasVnrArea, ExterQual, ExterCond, Foundation, TotalBsmtSF, LowQualFinSF, GrLivArea, BedroomAbvGr, KitchenAbvGr, GarageArea, PoolArea)
predict(fit1, new)
predict(fit1, new, interval = "prediction", level = 0.95)
